import React, { useState } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { motion } from 'framer-motion';

const Layout = ({ children }) => {
    const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
    const location = useLocation();
    
    const navItems = [
        { path: '/', label: 'Tree', icon: (
            <svg className="w-8 h-8" fill="none" viewBox="0 0 48 48" stroke="currentColor">
                <g id="hierarchy-15--node-organization-links-structure-link-nodes-network-hierarchy">
                  <path id="Union" fill="currentColor" fillRule="evenodd" d="M40.125 0.5c-1.5777 0 -2.7575 0.078839 -3.6329 0.184725 -2.1801 0.263696 -3.556 2.013245 -3.6671 3.998525 -0.0251 0.44689 -0.0463 0.98368 -0.0597 1.62637l-1.403 0.35075c-2.6305 0.65764 -4.4759 3.02117 -4.4759 5.73263V22h-2.8543c-0.0258 -1.8428 -0.086 -3.2422 -0.156 -4.2945 -0.1681 -2.5277 -1.891 -4.6918 -4.5931 -5.0753 -1.5524 -0.2203 -3.8038 -0.4029 -7.0103 -0.4029 -3.20648 0 -5.45786 0.1826 -7.01026 0.4029 -2.70212 0.3835 -4.424945 2.5476 -4.593116 5.0753C0.575919 19.1095 0.5 21.1314 0.5 24c0 2.8686 0.07592 4.8905 0.169325 6.2945 0.168172 2.5277 1.890995 4.6918 4.593115 5.0753 1.5524 0.2203 3.80378 0.4029 7.01026 0.4029 3.2065 0 5.4579 -0.1826 7.0103 -0.4029 2.7021 -0.3835 4.425 -2.5476 4.5931 -5.0753 0.07 -1.0523 0.1302 -2.4517 0.156 -4.2945h2.8543v9.607c0 2.7115 1.8454 5.075 4.4759 5.7326l1.403 0.3508c0.0134 0.6427 0.0346 1.1795 0.0597 1.6264 0.1111 1.9852 1.487 3.7348 3.6671 3.9985 0.8754 0.1059 2.0552 0.1847 3.6329 0.1847 1.5777 0 2.7575 -0.0788 3.6329 -0.1847 2.1801 -0.2637 3.556 -2.0133 3.6671 -3.9985 0.0431 -0.7699 0.075 -1.8066 0.075 -3.1918 0 -1.3852 -0.0319 -2.4219 -0.075 -3.1918 -0.1111 -1.9852 -1.487 -3.7348 -3.6671 -3.9985 -0.8754 -0.1059 -2.0552 -0.1847 -3.6329 -0.1847 -1.5777 0 -2.7575 0.0788 -3.6329 0.1847 -2.1801 0.2637 -3.556 2.0133 -3.6671 3.9986 -0.011 0.196 -0.0213 0.4093 -0.0304 0.6413l-0.4622 -0.1155c-0.8498 -0.2125 -1.446 -0.9761 -1.446 -1.8521V26h1.8896c0.0106 0.3743 0.0239 0.708 0.039 1.005 0.1068 2.1058 1.5625 3.9526 3.8726 4.2079 0.8529 0.0943 1.9739 0.1621 3.4374 0.1621 1.4635 0 2.5845 -0.0678 3.4374 -0.1621 2.3101 -0.2553 3.7658 -2.1021 3.8726 -4.2079 0.0379 -0.7482 0.065 -1.7285 0.065 -3.005s-0.0271 -2.2568 -0.065 -3.005c-0.1068 -2.1058 -1.5625 -3.9526 -3.8726 -4.2079 -0.8529 -0.0943 -1.9739 -0.1621 -3.4374 -0.1621 -1.4635 0 -2.5845 0.0678 -3.4374 0.1621 -2.3101 0.2553 -3.7658 2.1021 -3.8726 4.2079 -0.0151 0.297 -0.0284 0.6307 -0.039 1.005h-1.8896v-9.607c0 -0.876 0.5962 -1.6396 1.446 -1.8521l0.4622 -0.1155c0.0091 0.232 0.0194 0.4453 0.0304 0.6414 0.1111 1.9852 1.487 3.7348 3.6671 3.9985 0.8754 0.1059 2.0552 0.1847 3.6329 0.1847 1.5777 0 2.7575 -0.0788 3.6329 -0.1847 2.1801 -0.2637 3.556 -2.0133 3.6671 -3.9985 0.0431 -0.7699 0.075 -1.80657 0.075 -3.1918 0 -1.38523 -0.0319 -2.4219 -0.075 -3.19175 -0.1111 -1.98529 -1.487 -3.73483 -3.6671 -3.998526C42.8825 0.578839 41.7027 0.5 40.125 0.5Zm-3.1526 4.15578C37.6607 4.57253 38.6773 4.5 40.125 4.5s2.4643 0.07253 3.1526 0.15578c0.0496 0.006 0.0724 0.01695 0.0782 0.01997 0.006 0.00309 0.0091 0.00563 0.0131 0.01016 0.0051 0.0058 0.0536 0.06397 0.0624 0.22086 0.0382 0.68173 0.0687 1.64246 0.0687 2.96823 0 1.32577 -0.0305 2.2865 -0.0687 2.9682 -0.0088 0.1569 -0.0573 0.2151 -0.0624 0.2209 -0.004 0.0045 -0.0071 0.0071 -0.0131 0.0101 -0.0058 0.0031 -0.0286 0.014 -0.0782 0.02 -0.6883 0.0833 -1.7049 0.1558 -3.1526 0.1558s-2.4643 -0.0725 -3.1526 -0.1558c-0.0496 -0.006 -0.0724 -0.0169 -0.0782 -0.02 -0.006 -0.003 -0.0091 -0.0056 -0.0131 -0.0101 -0.0051 -0.0058 -0.0536 -0.064 -0.0624 -0.2209 -0.0382 -0.6817 -0.0687 -1.64243 -0.0687 -2.9682s0.0305 -2.2865 0.0687 -2.96823c0.0088 -0.15689 0.0573 -0.21506 0.0624 -0.22086 0.004 -0.00453 0.0071 -0.00707 0.0131 -0.01016 0.0058 -0.00302 0.0286 -0.01397 0.0782 -0.01997Zm0 32.25002c0.6883 -0.0833 1.7049 -0.1558 3.1526 -0.1558s2.4643 0.0725 3.1526 0.1558c0.0496 0.006 0.0724 0.0169 0.0782 0.02 0.0027 0.0014 0.0048 0.0026 0.0067 0.0041 0.0023 0.0017 0.0042 0.0035 0.0064 0.006 0.0051 0.0058 0.0536 0.064 0.0624 0.2209 0.0382 0.6817 0.0687 1.6424 0.0687 2.9682 0 1.3258 -0.0305 2.2865 -0.0687 2.9682 -0.0088 0.1569 -0.0573 0.2151 -0.0624 0.2209 -0.0019 0.0021 -0.0035 0.0038 -0.0054 0.0053 -0.0021 0.0017 -0.0045 0.0032 -0.0077 0.0048 -0.0058 0.0031 -0.0286 0.014 -0.0782 0.02 -0.6883 0.0833 -1.7049 0.1558 -3.1526 0.1558s-2.4643 -0.0725 -3.1526 -0.1558c-0.0496 -0.006 -0.0724 -0.0169 -0.0782 -0.02l-0.0021 -0.0011 -0.0039 -0.0025c-0.0026 -0.0018 -0.0047 -0.0038 -0.0071 -0.0065 -0.0051 -0.0058 -0.0536 -0.064 -0.0624 -0.2209 -0.0382 -0.6817 -0.0687 -1.6424 -0.0687 -2.9682 0 -1.3258 0.0305 -2.2865 0.0687 -2.9682 0.0088 -0.1569 0.0573 -0.2151 0.0624 -0.2209 0.004 -0.0045 0.0071 -0.0071 0.0131 -0.0101 0.0058 -0.0031 0.0286 -0.014 0.0782 -0.02ZM40.125 20.625c-1.3425 0 -2.3146 0.0624 -2.998 0.1379 -0.076 0.0084 -0.1214 0.0262 -0.1462 0.0389 -0.0248 0.0127 -0.0441 0.0279 -0.0615 0.0475 -0.0317 0.0359 -0.0987 0.1371 -0.1094 0.3482 -0.034 0.6694 -0.0599 1.5811 -0.0599 2.8025 0 1.2214 0.0259 2.1331 0.0599 2.8025 0.0107 0.2111 0.0777 0.3123 0.1094 0.3482 0.0174 0.0196 0.0367 0.0348 0.0616 0.0475 0.0247 0.0127 0.0701 0.0305 0.1461 0.0389 0.6834 0.0755 1.6555 0.1379 2.998 0.1379 1.3425 0 2.3146 -0.0624 2.998 -0.1379 0.076 -0.0084 0.1214 -0.0262 0.1462 -0.0389 0.0248 -0.0127 0.0441 -0.0279 0.0615 -0.0475 0.0317 -0.0359 0.0987 -0.1371 0.1094 -0.3482 0.034 -0.6694 0.0599 -1.5811 0.0599 -2.8025 0 -1.2214 -0.0259 -2.1331 -0.0599 -2.8025 -0.0107 -0.2111 -0.0777 -0.3123 -0.1094 -0.3482 -0.0174 -0.0196 -0.0367 -0.0348 -0.0616 -0.0475 -0.0247 -0.0127 -0.0701 -0.0305 -0.1461 -0.0389 -0.6834 -0.0755 -1.6555 -0.1379 -2.998 -0.1379Z" clipRule="evenodd" strokeWidth="0"></path>
                </g>
            </svg>
        )},
        { path: '/problem_link', label: 'Problem Link', icon: (
            <svg className="w-8 h-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
            </svg>
        )},
        { path: '/leaderboard', label: 'Leaderboard', icon: (
            <svg className="w-8 h-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path fill="#000000" d="M3.5 19.5h4.675V10.5H3.5v9Zm6.175 0h4.65V4.5h-4.65v15Zm6.15 0H20.5V12.5h-4.675v7ZM2 19.5V10.5c0 -0.4125 0.146915 -0.76565 0.44075 -1.0595C2.734415 9.14685 3.0875 9 3.5 9h4.675V4.5c0 -0.4125 0.1469 -0.765665 0.44075 -1.0595C8.9094 3.146835 9.2625 3 9.675 3h4.65c0.4125 0 0.76565 0.146835 1.0595 0.4405 0.29365 0.293835 0.4405 0.647 0.4405 1.0595v6.5H20.5c0.4125 0 0.76565 0.14685 1.0595 0.4405 0.29365 0.29385 0.4405 0.647 0.4405 1.0595v7c0 0.4125 -0.14685 0.7656 -0.4405 1.05925C21.26565 20.8531 20.9125 21 20.5 21H3.5c-0.4125 0 -0.765585 -0.1469 -1.05925 -0.44075C2.146915 20.2656 2 19.9125 2 19.5Z" strokeWidth="0.5"></path>
            </svg>
        )}

    ];

    return (
        <motion.div 
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 0.5 }}
            className="max-w-screen mx-auto px-2 sm:px-4 py-3 sm:py-6"
        >
            <nav className="relative">
                <div className="flex flex-col sm:flex-row items-center justify-between gap-4 sm:gap-6 px-2 xl:px-40">
                    <motion.h1 
                        initial={{ x: -20 }}
                        animate={{ x: 0 }}
                        transition={{ type: "spring", stiffness: 300 }}
                        className="text-3xl sm:text-5xl font-semibold font-electrolize after:content-[''] relative after:absolute after:-bottom-1 after:left-0 after:w-full after:h-[2px] after:bg-gradient-to-r after:from-[#3ECF8E] after:to-[#3AC489] after:rounded-md"
                    >
                        <span className="bg-gradient-to-tr from-[#057240] from-35% to-[#3AC489] bg-clip-text text-transparent text-6xl xl:text-8xl xl:text-center">
                            Blitz Cup
                        </span>
                    </motion.h1>

                    {/* Mobile Menu Button */}
                    <button 
                        onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
                        className="sm:hidden fixed top-4 right-4 z-50 p-2 rounded-lg bg-[#121212] border border-[#1C1C1C]"
                    >
                        <svg 
                            className="w-6 h-6 text-[#3ECF8E]" 
                            fill="none" 
                            viewBox="0 0 24 24" 
                            stroke="currentColor"
                        >
                            {isMobileMenuOpen ? (
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                            ) : (
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                            )}
                        </svg>
                    </button>

                    {/* Navigation Items */}
                    <motion.div 
                        initial={{ x: 20 }}
                        animate={{ x: 0 }}
                        transition={{ type: "spring", stiffness: 300 }}
                        className={`
                            ${isMobileMenuOpen ? 'flex' : 'hidden'} 
                            sm:flex flex-col sm:flex-row
                            fixed sm:relative top-0 right-0 
                            h-screen sm:h-auto w-64 sm:w-auto
                            pt-16 sm:pt-0
                            bg-[#0A0A0A] sm:bg-[#121212] 
                            border-l border-[#1C1C1C] sm:border-none
                            sm:rounded-lg sm:shadow-xl
                            z-40 sm:z-auto
                            transition-all duration-300
                        `}
                    >
                        {navItems.map(({ path, label, icon }) => (
                            <motion.div
                                key={path}
                                whileHover={{ scale: 1.05 }}
                                whileTap={{ scale: 0.95 }}
                                onClick={() => setIsMobileMenuOpen(false)}
                            >
                                <Link
                                    to={path}
                                    className={`
                                        flex items-center gap-2 px-4 py-3 sm:py-2 text-md rounded-md transition-all duration-200
                                        ${location.pathname === path 
                                            ? 'bg-gradient-to-tr from-[#057240] from-35% to-[#3AC489] text-[#0A0A0A] font-medium shadow-lg shadow-[#3ECF8E]/10' 
                                            : 'text-[#6B7280] hover:text-[#E5E7EB] hover:bg-[#1C1C1C]'
                                        }
                                    `}
                                >
                                    {icon}
                                    <span className="text-base sm:text-sm md:text-base">{label}</span>
                                </Link>
                            </motion.div>
                        ))}
                    </motion.div>
                </div>
            </nav>

            {/* Overlay for mobile menu */}
            {isMobileMenuOpen && (
                <motion.div
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    exit={{ opacity: 0 }}
                    className="fixed inset-0 bg-black/50 backdrop-blur-sm z-30 sm:hidden"
                    onClick={() => setIsMobileMenuOpen(false)}
                />
            )}

            <motion.main
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.2 }}
                className="mt-4 sm:mt-6"
            >
                {children}
            </motion.main>
        </motion.div>
    );
};  

export default Layout;